    1. 1. Introduction
    2. 2. Quick Start
    3. 3. Installation
    4.   1. 3.1. Supported Platforms
         2. 3.2. Installing a Binary Distribution
         3. 3.3. Installing Nix from Source
         4.   1. 3.3.1. Prerequisites
              2. 3.3.2. Obtaining a Source Distribution
              3. 3.3.3. Building Nix from Source
         5. 3.4. Using Nix within Docker
         6. 3.5. Security
         7.   1. 3.5.1. Single-User Mode
              2. 3.5.2. Multi-User Mode
         8. 3.6. Environment Variables
         9. 3.7. Upgrading Nix
        10. 3.8. Uninstalling Nix
    5. 4. Package Management
    6.   1. 4.1. Basic Package Management
         2. 4.2. Profiles
         3. 4.3. Garbage Collection
         4.   1. 4.3.1. Garbage Collector Roots
         5. 4.4. Sharing Packages Between Machines
         6.   1. 4.4.1. Serving a Nix store via HTTP
              2. 4.4.2. Copying Closures via SSH
              3. 4.4.3. Serving a Nix store via SSH
              4. 4.4.4. Serving a Nix store via S3
    7. 5. Nix Language
    8.   1. 5.1. Data Types
         2. 5.2. Language Constructs
         3.   1. 5.2.1. String interpolation
         4. 5.3. Operators
         5. 5.4. Derivations
         6.   1. 5.4.1. Advanced Attributes
         7. 5.5. Built-in Constants
         8. 5.6. Built-in Functions
    9. 6. Advanced Topics
   10.   1. 6.1. Remote Builds
         2. 6.2. Tuning Cores and Jobs
         3. 6.3. Verifying Build Reproducibility
         4. 6.4. Using the post-build-hook
   11. 7. Command Reference
   12.   1. 7.1. Common Options
         2. 7.2. Common Environment Variables
         3. 7.3. Main Commands
         4.   1. 7.3.1. nix-build
              2. 7.3.2. nix-shell
              3. 7.3.3. nix-store
              4.   1. 7.3.3.1. nix-store --add-fixed
                   2. 7.3.3.2. nix-store --add
                   3. 7.3.3.3. nix-store --delete
                   4. 7.3.3.4. nix-store --dump-db
                   5. 7.3.3.5. nix-store --dump
                   6. 7.3.3.6. nix-store --export
                   7. 7.3.3.7. nix-store --gc
                   8. 7.3.3.8. nix-store --generate-binary-cache-key
                   9. 7.3.3.9. nix-store --import
                  10. 7.3.3.10. nix-store --load-db
                  11. 7.3.3.11. nix-store --optimise
                  12. 7.3.3.12. nix-store --print-env
                  13. 7.3.3.13. nix-store --query
                  14. 7.3.3.14. nix-store --read-log
                  15. 7.3.3.15. nix-store --realise
                  16. 7.3.3.16. nix-store --repair-path
                  17. 7.3.3.17. nix-store --restore
                  18. 7.3.3.18. nix-store --serve
                  19. 7.3.3.19. nix-store --verify-path
                  20. 7.3.3.20. nix-store --verify
              5. 7.3.4. nix-env
              6.   1. 7.3.4.1. nix-env --delete-generations
                   2. 7.3.4.2. nix-env --install
                   3. 7.3.4.3. nix-env --list-generations
                   4. 7.3.4.4. nix-env --query
                   5. 7.3.4.5. nix-env --rollback
                   6. 7.3.4.6. nix-env --set-flag
                   7. 7.3.4.7. nix-env --set
                   8. 7.3.4.8. nix-env --switch-generation
                   9. 7.3.4.9. nix-env --switch-profile
                  10. 7.3.4.10. nix-env --uninstall
                  11. 7.3.4.11. nix-env --upgrade
         5. 7.4. Utilities
         6.   1. 7.4.1. nix-channel
              2. 7.4.2. nix-collect-garbage
              3. 7.4.3. nix-copy-closure
              4. 7.4.4. nix-daemon
              5. 7.4.5. nix-hash
              6. 7.4.6. nix-instantiate
              7. 7.4.7. nix-prefetch-url
         7. 7.5. Experimental Commands
         8.   1. 7.5.1. nix
              2. 7.5.2. nix build
              3. 7.5.3. nix bundle
              4. 7.5.4. nix copy
              5. 7.5.5. nix daemon
              6. 7.5.6. nix derivation
              7. 7.5.7. nix derivation add
              8. 7.5.8. nix derivation show
              9. 7.5.9. nix develop
             10. 7.5.10. nix doctor
             11. 7.5.11. nix edit
             12. 7.5.12. nix eval
             13. 7.5.13. nix flake
             14. 7.5.14. nix flake archive
             15. 7.5.15. nix flake check
             16. 7.5.16. nix flake clone
             17. 7.5.17. nix flake info
             18. 7.5.18. nix flake init
             19. 7.5.19. nix flake lock
             20. 7.5.20. nix flake metadata
             21. 7.5.21. nix flake new
             22. 7.5.22. nix flake prefetch
             23. 7.5.23. nix flake show
             24. 7.5.24. nix flake update
             25. 7.5.25. nix fmt
             26. 7.5.26. nix hash
             27. 7.5.27. nix hash file
             28. 7.5.28. nix hash path
             29. 7.5.29. nix hash to-base16
             30. 7.5.30. nix hash to-base32
             31. 7.5.31. nix hash to-base64
             32. 7.5.32. nix hash to-sri
             33. 7.5.33. nix help
             34. 7.5.34. nix help-stores
             35. 7.5.35. nix key
             36. 7.5.36. nix key convert-secret-to-public
             37. 7.5.37. nix key generate-secret
             38. 7.5.38. nix log
             39. 7.5.39. nix nar
             40. 7.5.40. nix nar cat
             41. 7.5.41. nix nar dump-path
             42. 7.5.42. nix nar ls
             43. 7.5.43. nix path-info
             44. 7.5.44. nix print-dev-env
             45. 7.5.45. nix profile
             46. 7.5.46. nix profile diff-closures
             47. 7.5.47. nix profile history
             48. 7.5.48. nix profile install
             49. 7.5.49. nix profile list
             50. 7.5.50. nix profile remove
             51. 7.5.51. nix profile rollback
             52. 7.5.52. nix profile upgrade
             53. 7.5.53. nix profile wipe-history
             54. 7.5.54. nix realisation
             55. 7.5.55. nix realisation info
             56. 7.5.56. nix registry
             57. 7.5.57. nix registry add
             58. 7.5.58. nix registry list
             59. 7.5.59. nix registry pin
             60. 7.5.60. nix registry remove
             61. 7.5.61. nix repl
             62. 7.5.62. nix run
             63. 7.5.63. nix search
             64. 7.5.64. nix shell
             65. 7.5.65. nix show-config
             66. 7.5.66. nix store
             67. 7.5.67. nix store add-file
             68. 7.5.68. nix store add-path
             69. 7.5.69. nix store cat
             70. 7.5.70. nix store copy-log
             71. 7.5.71. nix store copy-sigs
             72. 7.5.72. nix store delete
             73. 7.5.73. nix store diff-closures
             74. 7.5.74. nix store dump-path
             75. 7.5.75. nix store gc
             76. 7.5.76. nix store ls
             77. 7.5.77. nix store make-content-addressed
             78. 7.5.78. nix store optimise
             79. 7.5.79. nix store path-from-hash-part
             80. 7.5.80. nix store ping
             81. 7.5.81. nix store prefetch-file
             82. 7.5.82. nix store repair
             83. 7.5.83. nix store sign
             84. 7.5.84. nix store verify
             85. 7.5.85. nix upgrade-nix
             86. 7.5.86. nix why-depends
         9. 7.6. Files
        10.   1. 7.6.1. nix.conf
              2. 7.6.2. Profiles
              3.   1. 7.6.2.1. manifest.nix
                   2. 7.6.2.2. manifest.json
              4. 7.6.3. Channels
              5. 7.6.4. Default Nix expression
   13. 8. Architecture and Design
   14.   1. 8.1. File System Object
   15. 9. Protocols
   16.   1. 9.1. Serving Tarball Flakes
         2. 9.2. Derivation "ATerm" file format
   17. 10. Glossary
   18. 11. Contributing
   19.   1. 11.1. Hacking
         2. 11.2. Testing
         3. 11.3. Experimental Features
         4. 11.4. CLI guideline
         5. 11.5. C++ style guide
   20. 12. Release Notes
   21.   1. 12.1. Release 2.18 (2023-09-20)
         2. 12.2. Release 2.17 (2023-07-24)
         3. 12.3. Release 2.16 (2023-05-31)
         4. 12.4. Release 2.15 (2023-04-11)
         5. 12.5. Release 2.14 (2023-02-28)
         6. 12.6. Release 2.13 (2023-01-17)
         7. 12.7. Release 2.12 (2022-12-06)
         8. 12.8. Release 2.11 (2022-08-25)
         9. 12.9. Release 2.10 (2022-07-11)
        10. 12.10. Release 2.9 (2022-05-30)
        11. 12.11. Release 2.8 (2022-04-19)
        12. 12.12. Release 2.7 (2022-03-07)
        13. 12.13. Release 2.6 (2022-01-24)
        14. 12.14. Release 2.5 (2021-12-13)
        15. 12.15. Release 2.4 (2021-11-01)
        16. 12.16. Release 2.3 (2019-09-04)
        17. 12.17. Release 2.2 (2019-01-11)
        18. 12.18. Release 2.1 (2018-09-02)
        19. 12.19. Release 2.0 (2018-02-22)
        20. 12.20. Release 1.11.10 (2017-06-12)
        21. 12.21. Release 1.11 (2016-01-19)
        22. 12.22. Release 1.10 (2015-09-03)
        23. 12.23. Release 1.9 (2015-06-12)
        24. 12.24. Release 1.8 (2014-12-14)
        25. 12.25. Release 1.7 (2014-04-11)
        26. 12.26. Release 1.6.1 (2013-10-28)
        27. 12.27. Release 1.6 (2013-09-10)
        28. 12.28. Release 1.5.2 (2013-05-13)
        29. 12.29. Release 1.5 (2013-02-27)
        30. 12.30. Release 1.4 (2013-02-26)
        31. 12.31. Release 1.3 (2013-01-04)
        32. 12.32. Release 1.2 (2012-12-06)
        33. 12.33. Release 1.1 (2012-07-18)
        34. 12.34. Release 1.0 (2012-05-11)
        35. 12.35. Release 0.16 (2010-08-17)
        36. 12.36. Release 0.15 (2010-03-17)
        37. 12.37. Release 0.14 (2010-02-04)
        38. 12.38. Release 0.13 (2009-11-05)
        39. 12.39. Release 0.12 (2008-11-20)
        40. 12.40. Release 0.11 (2007-12-31)
        41. 12.41. Release 0.10.1 (2006-10-11)
        42. 12.42. Release 0.10 (2006-10-06)
        43. 12.43. Release 0.9.2 (2005-09-21)
        44. 12.44. Release 0.9.1 (2005-09-20)
        45. 12.45. Release 0.9 (2005-09-16)
        46. 12.46. Release 0.8.1 (2005-04-13)
        47. 12.47. Release 0.8 (2005-04-11)
        48. 12.48. Release 0.7 (2005-01-12)
        49. 12.49. Release 0.6 (2004-11-14)
        50. 12.50. Release 0.5 and earlier
     * Light
     * Rust
     * Coal
     * Navy
     * Ayu

                              Nix Reference Manual

   _____________________

     Warning
     This program is experimental and its interface is subject to change.

                                      Name

   nix flake metadata - show flake metadata

                                    Synopsis

   nix flake metadata [option...] flake-url

                                    Examples

     * Show what nixpkgs resolves to:

 # nix flake metadata nixpkgs
 Resolved URL:  github:edolstra/dwarffs
 Locked URL:    github:edolstra/dwarffs/f691e2c991e75edb22836f1dbe632c40324215c5
 Description:   A filesystem that fetches DWARF debug info from the Internet on demand
 Path:          /nix/store/769s05vjydmc2lcf6b02az28wsa9ixh1-source
 Revision:      f691e2c991e75edb22836f1dbe632c40324215c5
 Last modified: 2021-01-21 15:41:26
 Inputs:
 ├───nix: github:NixOS/nix/6254b1f5d298ff73127d7b0f0da48f142bdc753c
 │   ├───lowdown-src: github:kristapsdz/lowdown/1705b4a26fbf065d9574dce47a94e8c7c79e052f
 │   └───nixpkgs: github:NixOS/nixpkgs/ad0d20345219790533ebe06571f82ed6b034db31
 └───nixpkgs follows input 'nix/nixpkgs'

     * Show information about dwarffs in JSON format:

 # nix flake metadata dwarffs --json | jq .
 {
   "description": "A filesystem that fetches DWARF debug info from the Internet on demand",
   "lastModified": 1597153508,
   "locked": {
     "lastModified": 1597153508,
     "narHash": "sha256-VHg3MYVgQ12LeRSU2PSoDeKlSPD8PYYEFxxwkVVDRd0=",
     "owner": "edolstra",
     "repo": "dwarffs",
     "rev": "d181d714fd36eb06f4992a1997cd5601e26db8f5",
     "type": "github"
   },
   "locks": { ... },
   "original": {
     "id": "dwarffs",
     "type": "indirect"
   },
   "originalUrl": "flake:dwarffs",
   "path": "/nix/store/hang3792qwdmm2n0d9nsrs5n6bsws6kv-source",
   "resolved": {
     "owner": "edolstra",
     "repo": "dwarffs",
     "type": "github"
   },
   "resolvedUrl": "github:edolstra/dwarffs",
   "revision": "d181d714fd36eb06f4992a1997cd5601e26db8f5",
   "url": "github:edolstra/dwarffs/d181d714fd36eb06f4992a1997cd5601e26db8f5"
 }

                                  Description

   This command shows information about the flake specified by the flake
   reference flake-url. It resolves the flake reference using the flake
   registry, fetches it, and prints some meta data. This includes:

     * Resolved URL: If flake-url is a flake identifier, then this is the
       flake reference that specifies its actual location, looked up in the
       flake registry.

     * Locked URL: A flake reference that contains a commit or content hash
       and thus uniquely identifies a specific flake version.

     * Description: A one-line description of the flake, taken from the
       description field in flake.nix.

     * Path: The store path containing the source code of the flake.

     * Revision: The Git or Mercurial commit hash of the locked flake.

     * Revisions: The number of ancestors of the Git or Mercurial commit of
       the locked flake. Note that this is not available for github flakes.

     * Last modified: For Git or Mercurial flakes, this is the commit time of
       the commit of the locked flake; for tarball flakes, it's the most
       recent timestamp of any file inside the tarball.

     * Inputs: The flake inputs with their corresponding lock file entries.

   With --json, the output is a JSON object with the following fields:

     * original and originalUrl: The flake reference specified by the user
       (flake-url) in attribute set and URL representation.

     * resolved and resolvedUrl: The resolved flake reference (see above) in
       attribute set and URL representation.

     * locked and lockedUrl: The locked flake reference (see above) in
       attribute set and URL representation.

     * description: See Description above.

     * path: See Path above.

     * revision: See Revision above.

     * revCount: See Revisions above.

     * lastModified: See Last modified above.

     * locks: The contents of flake.lock.

                                    Options

     * --json Produce output in JSON format, suitable for consumption by
       another program.

   Common evaluation options:

     * --arg name expr Pass the value expr as the argument name to Nix
       functions.

     * --argstr name string Pass the string string as the argument name to
       Nix functions.

     * --debugger Start an interactive environment if evaluation fails.

     * --eval-store store-url The URL of the Nix store to use for evaluation,
       i.e. to store derivations (.drv files) and inputs referenced by them.

     * --impure Allow access to mutable paths and repositories.

     * --include / -I path Add path to the Nix search path. The Nix search
       path is initialized from the colon-separated NIX_PATH environment
       variable, and is used to look up the location of Nix expressions using
       paths enclosed in angle brackets (i.e., <nixpkgs>).

       For instance, passing

 -I /home/eelco/Dev
 -I /etc/nixos

       will cause Nix to look for paths relative to /home/eelco/Dev and
       /etc/nixos, in that order. This is equivalent to setting the NIX_PATH
       environment variable to

 /home/eelco/Dev:/etc/nixos

       It is also possible to match paths against a prefix. For example,
       passing

 -I nixpkgs=/home/eelco/Dev/nixpkgs-branch
 -I /etc/nixos

       will cause Nix to search for <nixpkgs/path> in
       /home/eelco/Dev/nixpkgs-branch/path and /etc/nixos/nixpkgs/path.

       If a path in the Nix search path starts with http:// or https://, it
       is interpreted as the URL of a tarball that will be downloaded and
       unpacked to a temporary location. The tarball must consist of a single
       top-level directory. For example, passing

 -I nixpkgs=https://github.com/NixOS/nixpkgs/archive/master.tar.gz

       tells Nix to download and use the current contents of the master
       branch in the nixpkgs repository.

       The URLs of the tarballs from the official nixos.org channels (see the
       manual page for nix-channel) can be abbreviated as
       channel:<channel-name>. For instance, the following two flags are
       equivalent:

 -I nixpkgs=channel:nixos-21.05
 -I nixpkgs=https://nixos.org/channels/nixos-21.05/nixexprs.tar.xz

       You can also fetch source trees using flake URLs and add them to the
       search path. For instance,

 -I nixpkgs=flake:nixpkgs

       specifies that the prefix nixpkgs shall refer to the source tree
       downloaded from the nixpkgs entry in the flake registry. Similarly,

 -I nixpkgs=flake:github:NixOS/nixpkgs/nixos-22.05

       makes <nixpkgs> refer to a particular branch of the NixOS/nixpkgs
       repository on GitHub.

     * --override-flake original-ref resolved-ref Override the flake
       registries, redirecting original-ref to resolved-ref.

   Common flake-related options:

     * --commit-lock-file Commit changes to the flake's lock file.

     * --inputs-from flake-url Use the inputs of the specified flake as
       registry entries.

     * --no-registries Don't allow lookups in the flake registries. This
       option is deprecated; use --no-use-registries.

     * --no-update-lock-file Do not allow any updates to the flake's lock
       file.

     * --no-write-lock-file Do not write the flake's newly generated lock
       file.

     * --output-lock-file flake-lock-path Write the given lock file instead
       of flake.lock within the top-level flake.

     * --override-input input-path flake-url Override a specific flake input
       (e.g. dwarffs/nixpkgs). This implies --no-write-lock-file.

     * --recreate-lock-file Recreate the flake's lock file from scratch.

     * --reference-lock-file flake-lock-path Read the given lock file instead
       of flake.lock within the top-level flake.

     * --update-input input-path Update a specific flake input (ignoring its
       previous entry in the lock file).

   Logging-related options:

     * --debug Set the logging verbosity level to 'debug'.

     * --log-format format Set the format of log output; one of raw,
       internal-json, bar or bar-with-logs.

     * --print-build-logs / -L Print full build logs on standard error.

     * --quiet Decrease the logging verbosity level.

     * --verbose / -v Increase the logging verbosity level.

   Miscellaneous global options:

     * --help Show usage information.

     * --offline Disable substituters and consider all previously downloaded
       files up-to-date.

     * --option name value Set the Nix configuration setting name to value
       (overriding nix.conf).

     * --refresh Consider all previously downloaded files out-of-date.

     * --repair During evaluation, rewrite missing or corrupted files in the
       Nix store. During building, rebuild missing or corrupted store paths.

     * --version Show version information.

   Options to override configuration settings:

     * --accept-flake-config Enable the accept-flake-config setting.

     * --access-tokens value Set the access-tokens setting.

     * --allow-dirty Enable the allow-dirty setting.

     * --allow-import-from-derivation Enable the allow-import-from-derivation
       setting.

     * --allow-new-privileges Enable the allow-new-privileges setting.

     * --allow-symlinked-store Enable the allow-symlinked-store setting.

     * --allow-unsafe-native-code-during-evaluation Enable the
       allow-unsafe-native-code-during-evaluation setting.

     * --allowed-impure-host-deps value Set the allowed-impure-host-deps
       setting.

     * --allowed-uris value Set the allowed-uris setting.

     * --allowed-users value Set the allowed-users setting.

     * --auto-allocate-uids Enable the auto-allocate-uids setting.

     * --auto-optimise-store Enable the auto-optimise-store setting.

     * --bash-prompt value Set the bash-prompt setting.

     * --bash-prompt-prefix value Set the bash-prompt-prefix setting.

     * --bash-prompt-suffix value Set the bash-prompt-suffix setting.

     * --build-hook value Set the build-hook setting.

     * --build-poll-interval value Set the build-poll-interval setting.

     * --build-users-group value Set the build-users-group setting.

     * --builders value Set the builders setting.

     * --builders-use-substitutes Enable the builders-use-substitutes
       setting.

     * --commit-lockfile-summary value Set the commit-lockfile-summary
       setting.

     * --compress-build-log Enable the compress-build-log setting.

     * --connect-timeout value Set the connect-timeout setting.

     * --cores value Set the cores setting.

     * --diff-hook value Set the diff-hook setting.

     * --download-attempts value Set the download-attempts setting.

     * --download-speed value Set the download-speed setting.

     * --eval-cache Enable the eval-cache setting.

     * --experimental-features value Set the experimental-features setting.

     * --extra-access-tokens value Append to the access-tokens setting.

     * --extra-allowed-impure-host-deps value Append to the
       allowed-impure-host-deps setting.

     * --extra-allowed-uris value Append to the allowed-uris setting.

     * --extra-allowed-users value Append to the allowed-users setting.

     * --extra-build-hook value Append to the build-hook setting.

     * --extra-experimental-features value Append to the
       experimental-features setting.

     * --extra-extra-platforms value Append to the extra-platforms setting.

     * --extra-hashed-mirrors value Append to the hashed-mirrors setting.

     * --extra-ignored-acls value Append to the ignored-acls setting.

     * --extra-nix-path value Append to the nix-path setting.

     * --extra-platforms value Set the extra-platforms setting.

     * --extra-plugin-files value Append to the plugin-files setting.

     * --extra-sandbox-paths value Append to the sandbox-paths setting.

     * --extra-secret-key-files value Append to the secret-key-files setting.

     * --extra-substituters value Append to the substituters setting.

     * --extra-system-features value Append to the system-features setting.

     * --extra-trusted-public-keys value Append to the trusted-public-keys
       setting.

     * --extra-trusted-substituters value Append to the trusted-substituters
       setting.

     * --extra-trusted-users value Append to the trusted-users setting.

     * --fallback Enable the fallback setting.

     * --filter-syscalls Enable the filter-syscalls setting.

     * --flake-registry value Set the flake-registry setting.

     * --fsync-metadata Enable the fsync-metadata setting.

     * --gc-reserved-space value Set the gc-reserved-space setting.

     * --hashed-mirrors value Set the hashed-mirrors setting.

     * --http-connections value Set the http-connections setting.

     * --http2 Enable the http2 setting.

     * --id-count value Set the id-count setting.

     * --ignore-try Enable the ignore-try setting.

     * --ignored-acls value Set the ignored-acls setting.

     * --impersonate-linux-26 Enable the impersonate-linux-26 setting.

     * --keep-build-log Enable the keep-build-log setting.

     * --keep-derivations Enable the keep-derivations setting.

     * --keep-env-derivations Enable the keep-env-derivations setting.

     * --keep-failed Enable the keep-failed setting.

     * --keep-going Enable the keep-going setting.

     * --keep-outputs Enable the keep-outputs setting.

     * --log-lines value Set the log-lines setting.

     * --max-build-log-size value Set the max-build-log-size setting.

     * --max-free value Set the max-free setting.

     * --max-jobs value Set the max-jobs setting.

     * --max-silent-time value Set the max-silent-time setting.

     * --max-substitution-jobs value Set the max-substitution-jobs setting.

     * --min-free value Set the min-free setting.

     * --min-free-check-interval value Set the min-free-check-interval
       setting.

     * --nar-buffer-size value Set the nar-buffer-size setting.

     * --narinfo-cache-negative-ttl value Set the narinfo-cache-negative-ttl
       setting.

     * --narinfo-cache-positive-ttl value Set the narinfo-cache-positive-ttl
       setting.

     * --netrc-file value Set the netrc-file setting.

     * --nix-path value Set the nix-path setting.

     * --no-accept-flake-config Disable the accept-flake-config setting.

     * --no-allow-dirty Disable the allow-dirty setting.

     * --no-allow-import-from-derivation Disable the
       allow-import-from-derivation setting.

     * --no-allow-new-privileges Disable the allow-new-privileges setting.

     * --no-allow-symlinked-store Disable the allow-symlinked-store setting.

     * --no-allow-unsafe-native-code-during-evaluation Disable the
       allow-unsafe-native-code-during-evaluation setting.

     * --no-auto-allocate-uids Disable the auto-allocate-uids setting.

     * --no-auto-optimise-store Disable the auto-optimise-store setting.

     * --no-builders-use-substitutes Disable the builders-use-substitutes
       setting.

     * --no-compress-build-log Disable the compress-build-log setting.

     * --no-eval-cache Disable the eval-cache setting.

     * --no-fallback Disable the fallback setting.

     * --no-filter-syscalls Disable the filter-syscalls setting.

     * --no-fsync-metadata Disable the fsync-metadata setting.

     * --no-http2 Disable the http2 setting.

     * --no-ignore-try Disable the ignore-try setting.

     * --no-impersonate-linux-26 Disable the impersonate-linux-26 setting.

     * --no-keep-build-log Disable the keep-build-log setting.

     * --no-keep-derivations Disable the keep-derivations setting.

     * --no-keep-env-derivations Disable the keep-env-derivations setting.

     * --no-keep-failed Disable the keep-failed setting.

     * --no-keep-going Disable the keep-going setting.

     * --no-keep-outputs Disable the keep-outputs setting.

     * --no-preallocate-contents Disable the preallocate-contents setting.

     * --no-print-missing Disable the print-missing setting.

     * --no-pure-eval Disable the pure-eval setting.

     * --no-require-drop-supplementary-groups Disable the
       require-drop-supplementary-groups setting.

     * --no-require-sigs Disable the require-sigs setting.

     * --no-restrict-eval Disable the restrict-eval setting.

     * --no-run-diff-hook Disable the run-diff-hook setting.

     * --no-sandbox Disable sandboxing.

     * --no-sandbox-fallback Disable the sandbox-fallback setting.

     * --no-show-trace Disable the show-trace setting.

     * --no-substitute Disable the substitute setting.

     * --no-sync-before-registering Disable the sync-before-registering
       setting.

     * --no-trace-function-calls Disable the trace-function-calls setting.

     * --no-trace-verbose Disable the trace-verbose setting.

     * --no-use-case-hack Disable the use-case-hack setting.

     * --no-use-cgroups Disable the use-cgroups setting.

     * --no-use-registries Disable the use-registries setting.

     * --no-use-sqlite-wal Disable the use-sqlite-wal setting.

     * --no-use-xdg-base-directories Disable the use-xdg-base-directories
       setting.

     * --no-warn-dirty Disable the warn-dirty setting.

     * --plugin-files value Set the plugin-files setting.

     * --post-build-hook value Set the post-build-hook setting.

     * --pre-build-hook value Set the pre-build-hook setting.

     * --preallocate-contents Enable the preallocate-contents setting.

     * --print-missing Enable the print-missing setting.

     * --pure-eval Enable the pure-eval setting.

     * --relaxed-sandbox Enable sandboxing, but allow builds to disable it.

     * --require-drop-supplementary-groups Enable the
       require-drop-supplementary-groups setting.

     * --require-sigs Enable the require-sigs setting.

     * --restrict-eval Enable the restrict-eval setting.

     * --run-diff-hook Enable the run-diff-hook setting.

     * --sandbox Enable sandboxing.

     * --sandbox-build-dir value Set the sandbox-build-dir setting.

     * --sandbox-dev-shm-size value Set the sandbox-dev-shm-size setting.

     * --sandbox-fallback Enable the sandbox-fallback setting.

     * --sandbox-paths value Set the sandbox-paths setting.

     * --secret-key-files value Set the secret-key-files setting.

     * --show-trace Enable the show-trace setting.

     * --ssl-cert-file value Set the ssl-cert-file setting.

     * --stalled-download-timeout value Set the stalled-download-timeout
       setting.

     * --start-id value Set the start-id setting.

     * --store value Set the store setting.

     * --substitute Enable the substitute setting.

     * --substituters value Set the substituters setting.

     * --sync-before-registering Enable the sync-before-registering setting.

     * --system value Set the system setting.

     * --system-features value Set the system-features setting.

     * --tarball-ttl value Set the tarball-ttl setting.

     * --timeout value Set the timeout setting.

     * --trace-function-calls Enable the trace-function-calls setting.

     * --trace-verbose Enable the trace-verbose setting.

     * --trusted-public-keys value Set the trusted-public-keys setting.

     * --trusted-substituters value Set the trusted-substituters setting.

     * --trusted-users value Set the trusted-users setting.

     * --use-case-hack Enable the use-case-hack setting.

     * --use-cgroups Enable the use-cgroups setting.

     * --use-registries Enable the use-registries setting.

     * --use-sqlite-wal Enable the use-sqlite-wal setting.

     * --use-xdg-base-directories Enable the use-xdg-base-directories
       setting.

     * --user-agent-suffix value Set the user-agent-suffix setting.

     * --warn-dirty Enable the warn-dirty setting.
