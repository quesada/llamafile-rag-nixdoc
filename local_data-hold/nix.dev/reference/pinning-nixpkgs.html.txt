   Link: canonical
   Link: index: Index
   Link: search: Search
   Link: next: Concepts
   Link: prev: Further reading
   Skip to main content [ ] [ ]
   _____________________ Ctrl+K
   [IMG] nix.dev
   IFrame

   Official documentation for getting things done with Nix.

   _____________________ Ctrl+K
     * Install Nix
     * Tutorials [ ]
          * First steps [ ]
               * Ad hoc shell environments
               * Reproducible interpreted scripts
               * Declarative shell environments
               * Towards reproducibility: pinning Nixpkgs
          * Nix language basics
          * Packaging existing software
          * Package parameters and overrides with callPackage
          * Working with local files
          * Cross compilation
          * Module system [ ]
               * 1. A basic module
               * 2. Module system deep dive
          * NixOS [ ]
               * NixOS virtual machines
               * Building a bootable ISO image
               * Building and running Docker images
               * Integration testing with NixOS virtual machines
               * Provisioning remote machines via SSH
               * Installing NixOS on a Raspberry Pi
               * Deploying NixOS using Terraform
               * Setting up an HTTP binary cache
               * Setting up distributed builds
     * Guides [ ]
          * Recipes [ ]
               * Configure Nix to use a custom binary cache
               * Automatic environments
               * Dependencies in the development shell
               * Managing remote sources
               * Python development environment
               * Setting up post-build hooks
               * Continuous integration with GitHub Actions
          * Best practices
          * Troubleshooting
          * Frequently Asked Questions
     * Reference [ ]
          * Glossary
          * Nix reference manual [ ]
               * Nix pre-release (development)
               * Nix 2.24 (latest)
               * Nix 2.18 (in Nixpkgs rolling)
               * Nix 2.18 (in Nixpkgs 24.05)
               * Nix 2.18 (in Nixpkgs 23.11)
          * Nixpkgs manual
          * NixOS manual
          * Community projects
          * Support tools
          * Further reading
          * Pinning Nixpkgs
     * Concepts [ ]
          * Flakes
          * Frequently Asked Questions
     * Contributing [ ]
          * How to contribute
          * How to get help
          * Contributing documentation [ ]
               * Documentation resources
               * Documentation framework
               * Style guide
               * How to write a tutorial
     * Acknowledgements [ ]
          * Sponsors
     * Repository
     * Suggest edit
     * Open issue
     * .md
     * .pdf
   [ Submit ]

                                Pinning Nixpkgs

Contents

     * Possible URL values
     * Examples

                                Pinning Nixpkgs#

   Specifying remote Nix expressions, such as the one provided by Nixpkgs,
   can be done in several ways:

     * $NIX_PATH environment variable

     * -I option to most of commands like nix-build, nix-shell, etc.

     * fetchurl, fetchTarball, fetchGit or Nixpkgs fetchers in Nix
       expressions

Possible URL values#

     * Local file path:

 ./path/to/expression.nix

       Using ./. means that the expression is located in a file default.nix
       in the current directory.

     * Pinned to a specific commit:

 https://github.com/NixOS/nixpkgs/archive/eabc38219184cc3e04a974fe31857d8e0eac098d.tar.gz

     * Using the latest channel version, meaning all tests have passed:

 http://nixos.org/channels/nixos-22.11/nixexprs.tar.xz

     * Shorthand syntax for channels:

 channel:nixos-22.11

     * Using the latest channel version, hosted by GitHub:

 https://github.com/NixOS/nixpkgs/archive/nixos-22.11.tar.gz

     * Using the latest commit on the release branch, but not tested yet:

 https://github.com/NixOS/nixpkgs/archive/release-21.11.tar.gz

Examples#

     * $ nix-build -I ~/dev

     * $ nix-build -I nixpkgs=http://nixos.org/channels/nixos-22.11/nixexprs.tar.xz

     * $ nix-build -I nixpkgs=channel:nixos-22.11

     * $ NIX_PATH=nixpkgs=http://nixos.org/channels/nixos-22.11/nixexprs.tar.xz nix-build

     * $ NIX_PATH=nixpkgs=channel:nixos-22.11 nix-build

     * In the Nix language:

 1let
 2  pkgs = import (fetchTarball "https://github.com/NixOS/nixpkgs/archive/nixos-22.11.tar.gz") {};
 3in pkgs.stdenv.mkDerivation { ... }

   previous

   Further reading

   next

   Concepts

   Contents
     * Possible URL values
     * Examples

   By the Nix documentation team and contributors.

   Â© Copyright 2016-2024, NixOS Foundation.
