   Link: canonical
   Link: index: Index
   Link: search: Search
   Link: next: 1. A basic module
   Link: prev: Cross compilation
   Skip to main content [ ] [ ]
   _____________________ Ctrl+K
   [IMG] nix.dev
   IFrame

   Official documentation for getting things done with Nix.

   _____________________ Ctrl+K
     * Install Nix
     * Tutorials [ ]
          * First steps [ ]
               * Ad hoc shell environments
               * Reproducible interpreted scripts
               * Declarative shell environments
               * Towards reproducibility: pinning Nixpkgs
          * Nix language basics
          * Packaging existing software
          * Package parameters and overrides with callPackage
          * Working with local files
          * Cross compilation
          * Module system [ ]
               * 1. A basic module
               * 2. Module system deep dive
          * NixOS [ ]
               * NixOS virtual machines
               * Building a bootable ISO image
               * Building and running Docker images
               * Integration testing with NixOS virtual machines
               * Provisioning remote machines via SSH
               * Installing NixOS on a Raspberry Pi
               * Deploying NixOS using Terraform
               * Setting up an HTTP binary cache
               * Setting up distributed builds
     * Guides [ ]
          * Recipes [ ]
               * Configure Nix to use a custom binary cache
               * Automatic environments
               * Dependencies in the development shell
               * Managing remote sources
               * Python development environment
               * Setting up post-build hooks
               * Continuous integration with GitHub Actions
          * Best practices
          * Troubleshooting
          * Frequently Asked Questions
     * Reference [ ]
          * Glossary
          * Nix reference manual [ ]
               * Nix pre-release (development)
               * Nix 2.24 (latest)
               * Nix 2.18 (in Nixpkgs rolling)
               * Nix 2.18 (in Nixpkgs 24.05)
               * Nix 2.18 (in Nixpkgs 23.11)
          * Nixpkgs manual
          * NixOS manual
          * Community projects
          * Support tools
          * Further reading
          * Pinning Nixpkgs
     * Concepts [ ]
          * Flakes
          * Frequently Asked Questions
     * Contributing [ ]
          * How to contribute
          * How to get help
          * Contributing documentation [ ]
               * Documentation resources
               * Documentation framework
               * Style guide
               * How to write a tutorial
     * Acknowledgements [ ]
          * Sponsors
     * Repository
     * Suggest edit
     * Open issue
     * .md
     * .pdf
   [ Submit ]

                                 Module system

Contents

     * What do you need?
     * How long will it take?

                                 Module system#

   Much of the power in Nixpkgs and NixOS comes from the module system.

   The module system is a Nix language library that enables you to

     * Declare one attribute set using many separate Nix expressions.

     * Impose dynamic type constraints on values in that attribute set.

     * Define values for the same attribute in different Nix expressions and
       merge these values automatically according to their type.

   These Nix expressions are called modules and must have a particular
   structure.

   In this tutorial series you’ll learn

     * What a module is and how to create one.

     * What options are and how to declare them.

     * How to express dependencies between modules.

What do you need?#

     * Familiarity with data types and general programming concepts

     * A Nix installation to run the examples

     * Intermediate proficiency in reading and writing the Nix language

How long will it take?#

   This is a very long tutorial. Prepare for at least 3 hours of work.

   Lessons

     * 1. A basic module
     * 2. Module system deep dive

   previous

   Cross compilation

   next

   1. A basic module

   Contents
     * What do you need?
     * How long will it take?

   By the Nix documentation team and contributors.

   © Copyright 2016-2024, NixOS Foundation.
