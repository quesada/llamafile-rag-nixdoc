   Link: canonical
   Link: index: Index
   Link: search: Search
   Link: next: Building and running Docker images
   Link: prev: NixOS virtual machines
   Skip to main content [ ] [ ]
   _____________________ Ctrl+K
   [IMG] nix.dev
   IFrame

   Official documentation for getting things done with Nix.

   _____________________ Ctrl+K
     * Install Nix
     * Tutorials [ ]
          * First steps [ ]
               * Ad hoc shell environments
               * Reproducible interpreted scripts
               * Declarative shell environments
               * Towards reproducibility: pinning Nixpkgs
          * Nix language basics
          * Packaging existing software
          * Package parameters and overrides with callPackage
          * Working with local files
          * Cross compilation
          * Module system [ ]
               * 1. A basic module
               * 2. Module system deep dive
          * NixOS [ ]
               * NixOS virtual machines
               * Building a bootable ISO image
               * Building and running Docker images
               * Integration testing with NixOS virtual machines
               * Provisioning remote machines via SSH
               * Installing NixOS on a Raspberry Pi
               * Deploying NixOS using Terraform
               * Setting up an HTTP binary cache
               * Setting up distributed builds
     * Guides [ ]
          * Recipes [ ]
               * Configure Nix to use a custom binary cache
               * Automatic environments
               * Dependencies in the development shell
               * Managing remote sources
               * Python development environment
               * Setting up post-build hooks
               * Continuous integration with GitHub Actions
          * Best practices
          * Troubleshooting
          * Frequently Asked Questions
     * Reference [ ]
          * Glossary
          * Nix reference manual [ ]
               * Nix pre-release (development)
               * Nix 2.24 (latest)
               * Nix 2.18 (in Nixpkgs rolling)
               * Nix 2.18 (in Nixpkgs 24.05)
               * Nix 2.18 (in Nixpkgs 23.11)
          * Nixpkgs manual
          * NixOS manual
          * Community projects
          * Support tools
          * Further reading
          * Pinning Nixpkgs
     * Concepts [ ]
          * Flakes
          * Frequently Asked Questions
     * Contributing [ ]
          * How to contribute
          * How to get help
          * Contributing documentation [ ]
               * Documentation resources
               * Documentation framework
               * Style guide
               * How to write a tutorial
     * Acknowledgements [ ]
          * Sponsors
     * Repository
     * Suggest edit
     * Open issue
     * .md
     * .pdf
   [ Submit ]

                         Building a bootable ISO image

Contents

     * Next steps

                         Building a bootable ISO image#

   Note

   If you need to build images for a different platform, see Cross compiling.

   You may find that an official installation image lacks some hardware
   support.

   The solution is to create myimage.nix to point to the latest kernel using
   the minimal installation ISO:

  1{ pkgs, modulesPath, lib, ... }: {
  2  imports = [
  3    "${modulesPath}/installer/cd-dvd/installation-cd-minimal.nix"
  4  ];
  5
  6  # use the latest Linux kernel
  7  boot.kernelPackages = pkgs.linuxPackages_latest;
  8
  9  # Needed for https://github.com/NixOS/nixpkgs/issues/58959
 10  boot.supportedFilesystems = lib.mkForce [ "btrfs" "reiserfs" "vfat" "f2fs" "xfs" "ntfs" "cifs" ];
 11}

   Generate an ISO with the above configuration:

 $ NIX_PATH=nixpkgs=https://github.com/NixOS/nixpkgs/archive/74e2faf5965a12e8fa5cff799b1b19c6cd26b0e3.tar.gz nix-shell -p nixos-generators --run "nixos-generate --format iso --configuration ./myimage.nix -o result"

   Copy the new image to your USB stick by replacing sdX with the name of
   your device:

 $ dd if=result/iso/*.iso of=/dev/sdX status=progress
 $ sync

Next steps#

     * Take a look at this list of formats that generators support to find
       your cloud provider or virtualization technology.

     * Take a look at the alternative guide to create a NixOS live CD

   previous

   NixOS virtual machines

   next

   Building and running Docker images

   Contents
     * Next steps

   By the Nix documentation team and contributors.

   Â© Copyright 2016-2024, NixOS Foundation.
