   Link: preload stylesheet
   Link: modulepreload
   Link: modulepreload
   Link: modulepreload
   Skip to content
   NixOS 与 Flakes
   SearchK
   Main Navigation首页前言开始使用最佳实践

   简体中文

   English

   简体中文

   English

   Appearance

   Menu
   Return to top
   Sidebar Navigation

前言

   前言

开始使用

   简介

   优缺点

   安装

Nix 语言

   快速入门

NixOS 与 Flakes

   开始使用 NixOS

   Flakes 简介

   使用 Flakes 管理 NixOS

   NixOS 的 flake.nix 内容详解

   Flakes 的组合能力与 Nixpkgs 模块系统

   安装使用 Home Manager

   模块化系统配置

   更新系统

   降级或升级软件包

   其他杂七杂八的内容

Nixpkgs 高级用法

   简介

   callPackage

   Overriding

   Overlays

   多 Nixpkgs 实例的妙用

Nix Store 与二进制缓存

   简介

   添加二进制缓存服务器

   搭建你自己的缓存服务器

NixOS 最佳实践

   简介

   运行非 NixOS 的二进制文件

   简化常用的 NixOS 相关命令

   加速 Dotfiles 的调试

   自定义 NIX_PATH 与 Flake Registry

   远程部署 NixOS 配置

   调试 Nix 软件包与 Nix 表达式

Flakes 的其他玩法

   简介

   Flake Inputs

   Flake Outputs

   新一代 Nix 命令行工具的使用

   模块系统与自定义 options

   [WIP]Testing

在 NixOS 上进行开发工作

   nix shell, nix develop & pkgs.runCommand

   各语言的开发环境

   [WIP]软件打包

   跨平台编译

   分布式构建

   [WIP]内核开发

其他进阶话题

   其他进阶话题

常见问题 FAQ

   常见问题 FAQ

   On this page

                          使用 Justfile 简化 NixOS 相关命令 ​

   在使用 NixOS 的过程中，我们会经常使用 nixos-rebuild 命令，经常需要输入一大堆参数，比较繁琐。

   我使用了 just 来管理我的 flake 配置相关的命令，简化使用。你也可以使用其他类似的工具来干这个活（比如说 Makefile 或
   cargo-make），这里我仅介绍下我的用法以供参考。

   我的 Justfile 大概内容截取如下：

     我使用的 Justfile 最新版: ryan4yin/nix-config/Justfile

   [ Submit ]Makefile

 # just is a command runner, Justfile is very similar to Makefile, but simpler.
 ############################################################################
 #
 #  Nix commands related to the local machine
 #
 ############################################################################
 deploy:
   nixos-rebuild switch --flake . --use-remote-sudo
 debug:
   nixos-rebuild switch --flake . --use-remote-sudo --show-trace --verbose
 up:
   nix flake update
 # Update specific input
 # usage: make upp i=home-manager
 upp:
   nix flake update $(i)
 history:
   nix profile history --profile /nix/var/nix/profiles/system
 repl:
   nix repl -f flake:nixpkgs
 clean:
   # remove all generations older than 7 days
   sudo nix profile wipe-history --profile /nix/var/nix/profiles/system  --older-than 7d
 gc:
   # garbage collect all unused nix store entries
   sudo nix store gc --debug
   sudo nix-collect-garbage --delete-old
 ############################################################################
 #
 #  Idols, Commands related to my remote distributed building cluster
 #
 ############################################################################
 add-idols-ssh-key:
   ssh-add ~/.ssh/ai-idols
 aqua: add-idols-ssh-key
   nixos-rebuild --flake .#aquamarine --target-host aquamarine --build-host aquamarine switch --use-remote-sudo
 aqua-debug: add-idols-ssh-key
   nixos-rebuild --flake .#aquamarine --target-host aquamarine --build-host aquamarine switch --use-remote-sudo --show-trace --verbose
 ruby: add-idols-ssh-key
   nixos-rebuild --flake .#ruby --target-host ruby --build-host ruby switch --use-remote-sudo
 ruby-debug: add-idols-ssh-key
   nixos-rebuild --flake .#ruby --target-host ruby --build-host ruby switch --use-remote-sudo --show-trace --verbose
 kana: add-idols-ssh-key
   nixos-rebuild --flake .#kana --target-host kana --build-host kana switch --use-remote-sudo
 kana-debug: add-idols-ssh-key
   nixos-rebuild --flake .#kana --target-host kana --build-host kana switch --use-remote-sudo --show-trace --verbose
 idols: aqua ruby kana
 idols-debug: aqua-debug ruby-debug kana-debug

   1
   2
   3
   4
   5
   6
   7
   8
   9
   10
   11
   12
   13
   14
   15
   16
   17
   18
   19
   20
   21
   22
   23
   24
   25
   26
   27
   28
   29
   30
   31
   32
   33
   34
   35
   36
   37
   38
   39
   40
   41
   42
   43
   44
   45
   46
   47
   48
   49
   50
   51
   52
   53
   54
   55
   56
   57
   58
   59
   60
   61
   62
   63
   64
   65
   66
   67

   将上述 Justfile 文件存放到 NixOS 配置的根目录下，然后我们就可以使用 just 命令来执行相关的命令了。比如说我这里 just
   deploy 就是部署 NixOS 配置到本地主机，just idols 就是部署到我的远程主机集群。

   Edit this page

   Last updated:

   Pager
   Previous page运行非 NixOS 的二进制文件
   Next page加速 Dotfiles 的调试

   Licensed under CC BY-SA 4.0

   Copyright © 2023-present Ryan Yin
