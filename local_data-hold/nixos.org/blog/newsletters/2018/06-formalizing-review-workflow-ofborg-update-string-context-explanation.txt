   Link: canonical
   Link: sitemap
   [ Submit ]
   Explore Download Learn Values Community Blog Donate  Search

  #06 - Formalizing review workflow, OfBorg update, String Context explanation

   Published on Wed Aug 15 2018

  #06 - Formalizing review workflow, OfBorg update, String Context explanation

                                      News

     * An EPYC NixOS build farm

       Graham explores and benchmarks an AMD EPYC build server against a
       differently incredible build server, finding the EPYC’s builds are
       much faster across the board.

     * Understanding Nix’s String Context

       Shea Levy explains what is String Context, how it’s implemented in Nix
       and shares implications on the use of the language.

     * PostgreSQL packaging is getting an overhaul

       Easier use of plugins, version 10 as default, improved documentation,
       LLVM JIT support and more.

     * RFC: pkgs.overrideWithScope

       Add pkgs.overrideWithScope. This function is similar to pkgs.override,
       except that it filters the arguments like callPackage does.

     * RFC: Use meta.tests to link from packages to the tests that test them

       Aims to improve test discovery in nixpkgs.

     * How to deploy Mendix applications with Nix/NixOS

     * Layered build function abstractions for building Nix packages

       An elaborate blog post that composes the stdenv.mkDerivation {}
       abstraction function from scratch by using a layered approach.

     * OfBorg update

       Build time-outs, push-button deploys, monitoring transparency, and
       more.

     * RFC 30: Formalize review workflow

       A proposal for a new review workflow based on a set of pull-request
       states (needs:review, needs:work). It is intended to help reviewers
       and contributors get PRs merged quicker and reduce likelihood of PRs
       getting lost. It also greatly increases the value of non-commiter
       reviews.

     * libnix-haskell 0.2.0.1 released

       libnix provides a nicely typed wrapper around the nix command line
       (for parsing, instantiating and realizing). It also provides wrappers
       for the nix-prefetch-url and nix-prefetch-git.

                     Contribute to NixOS Weekly Newsletter

   This work would not be possible without the many contributions of the
   community.

   You can help too! Comment on the pull request for the next edition or look
   at the issue tracker to add other improvements.

    The Project

     * Channel Status
     * Packages search
     * Options search
     * Reproducible Builds Status
     * Security

    Get in Touch

     * Forum
     * Matrix Chat
     * Commercial support

    Contribute

     * Contributing Guide
     * Donate

    Stay up to Date

     * Blog
     * Newsletter

     ----------------------------------------------------------------------

   Copyright © 2024 NixOS contributors
   CC-BY-SA-4.0

     ----------------------------------------------------------------------

    Connect with us:
