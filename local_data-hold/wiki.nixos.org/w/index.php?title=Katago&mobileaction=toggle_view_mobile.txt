   Jump to content
   [ ] Main menu
   Main menu
   Navigation
     * Home
   Ecosystem
     * Overview
     * NixOS
     * Package Manager
     * Nix Language
     * Nixpkgs
     * Hydra
     * Applications
   Topics
     * Software
     * Hardware
     * Desktop
     * Server
     * Community
   Learn NixOS
     * Overview
     * Guides
     * Tutorials
     * References
     * Cookbooks
   Wiki
     * Contribute
     * Manual of Style
     * Recent changes
     * Random page
   [IMG] NixOS Wiki
   Search
   _____________________
   Search
     * English
     * Create account
     * Log in
   [ ] Personal tools
     * Create account
     * Log in
     * Dark mode

Contents

     * Beginning
     * 1 Installation
          * 1.1 Using CUDA
          * 1.2 Using Eigen
          * 1.3 Using TensorRT
     * 2 Configuration
          * 2.1 Contribute to the neural net
   [ ] Toggle the table of contents

                                     Katago

     * Page
     * Discussion
   [ ] English
     * Read
     * View source
     * View history
   [ ] Tools
   Tools
   Actions
     * Read
     * View source
     * View history
   General
     * What links here
     * Related changes
     * Special pages
     * Printable version
     * Permanent link
     * Page information
   From NixOS Wiki

   Katago is a very strong go engine. It has no GUI and has to be used with
   KaTrain, Lizzie, Ogatak, q5Go or other tools like Sabaki.

Installation

   There are several build options for Katago's derivation. Katago can use
   either Eigen, OpenCL, CUDA, or TensorRT. By default, it uses OpenCL. To
   use a different backend override the `backend` attribute, allowed values
   are "eigen", "opencl", "cuda", and "tensorrt".

   For the eigen and cuda backends either version should be more or less
   functionally the same.

  Using CUDA

    katago.override {
      backend = "cuda";
      cudnn = cudnn_cudatoolkit_10_2; # insert your favorite version of CUDA here (optional)
      cudatoolkit = cudatoolkit_10_2; # I recommend at least CUDA 10, because older versions suffer major performance penalties
      stdev = gcc8Stdev; # If you specify CUDA 10 or below you must also override the gcc version, this is due to NVidia compiler support.
    }

  Using Eigen

    katago.override {
      backend = "eigen";
    }

  Using TensorRT

   First download the tensorrt redistributable installer from
   https://developer.nvidia.com/tensorrt and add it to your nix-store.

   Note that you need an NVidia account (free) to do this.

    katago.override {
      backend = "tensorrt";
      enableTrtPlanCache = true; # Recommended to speed up booting, but uses additional disk space, so not recommended for contrib.
    }

Configuration

   If your processor support AVX2, you might want to enable it:

    katago.override {
      enableAVX2 = true;
    }

   By default, katago uses the TCMalloc memory allocator. It is not
   recommended that you disable it due to severe fragmentation issues after
   running katago for a few hours. However, if you cannot use TCMalloc, and
   you do not plan on running katago for extended periods of time, you can
   disable it anyway.

    katago.override {
      enableTcmalloc = false;
    }

   Katago also supports large boards (up to 29x29); however, there are no
   networks trained specifically on them, and enabling them slows down even
   normal sized board play, so it is disabled by default. If you want to
   enable support:

    katago.override {
      enableBigBoards = true;
    }

  Contribute to the neural net

   Enabling [1] contributions to the neural net:

    katago.override {
      enableContrib = true;
    }

   Retrieved from
   "https://wiki.nixos.org/w/index.php?title=Katago&oldid=17655"
   Categories:
     * Applications
     * Gaming
     * This page was last edited on 26 September 2024, at 21:44.
     * Privacy policy
     * About the NixOS Wiki
     * Â 
     * Desktop
     * Powered by MediaWiki
     * Toggle limited content width
