   Jump to content
   [ ] Main menu
   Main menu
   Navigation
     * Home
   Ecosystem
     * Overview
     * NixOS
     * Package Manager
     * Nix Language
     * Nixpkgs
     * Hydra
     * Applications
   Topics
     * Software
     * Hardware
     * Desktop
     * Server
     * Community
   Learn NixOS
     * Overview
     * Guides
     * Tutorials
     * References
     * Cookbooks
   Wiki
     * Contribute
     * Manual of Style
     * Recent changes
     * Random page
   [IMG] NixOS Wiki
   Search
   _____________________
   Search
     * English
     * Create account
     * Log in
   [ ] Personal tools
     * Create account
     * Log in
     * Dark mode

Contents

     * Beginning
     * 1 Build LLVM/clang from source
     * 2 Building Nixpkgs/NixOS with LLVM
          * 2.1 Using LLVM in Nixpkgs without the Nixpkgs LLVM Workspace
   [ ] Toggle the table of contents

                                      LLVM

     * Page
     * Discussion
   [ ] English
     * Read
     * View source
     * View history
   [ ] Tools
   Tools
   Actions
     * Read
     * View source
     * View history
   General
     * What links here
     * Related changes
     * Special pages
     * Printable version
     * Permanent link
     * Page information
   From NixOS Wiki

   From Wikipedia:

           The LLVM compiler infrastructure project is a "collection of
           modular and reusable compiler and toolchain technologies" used to
           develop compiler front ends and back ends.

Build LLVM/clang from source

   LLVM/clang when compiled from source won't find headers/libraries/startup
   files without compiler wrapper. However it is possible to use the
   following shell.nix to get started and provide the missing flags to the
   compiler manually

 with import <nixpkgs> {};
 let
   gccForLibs = stdenv.cc.cc;
 in stdenv.mkDerivation {
   name = "llvm-env";
   buildInputs = [
     bashInteractive
     python3
     ninja
     cmake
     llvmPackages_latest.llvm
   ];

   # where to find libgcc
   NIX_LDFLAGS="-L${gccForLibs}/lib/gcc/${targetPlatform.config}/${gccForLibs.version}";
   # teach clang about C startup file locations
   CFLAGS="-B${gccForLibs}/lib/gcc/${targetPlatform.config}/${gccForLibs.version} -B ${stdenv.cc.libc}/lib";

   cmakeFlags = [
     "-DGCC_INSTALL_PREFIX=${gcc}"
     "-DC_INCLUDE_DIRS=${stdenv.cc.libc.dev}/include"
     "-GNinja"
     # Debug for debug builds
     "-DCMAKE_BUILD_TYPE=Release"
     # inst will be our installation prefix
     "-DCMAKE_INSTALL_PREFIX=../inst"
     "-DLLVM_INSTALL_TOOLCHAIN_ONLY=ON"
     # change this to enable the projects you need
     "-DLLVM_ENABLE_PROJECTS=clang"
     # enable libcxx* to come into play at runtimes
     "-DLLVM_ENABLE_RUNTIMES=libcxx;libcxxabi"
     # this makes llvm only to produce code for the current platform, this saves CPU time, change it to what you need
     "-DLLVM_TARGETS_TO_BUILD=host"
   ];
 }

   After that you can execute the following commands to get a working clang:

  $ git clone https://github.com/llvm/llvm-project/
  $ mkdir build && cd build
  $ cmake $cmakeFlags ../llvm-project/llvm
  $ ninja
  # installs everything to ../inst
  $ ninja install
  $ cd ..

   Then assuming you have a test program called main.c:

  $ ./inst/bin/clang $CFLAGS -o main main.c

Building Nixpkgs/NixOS with LLVM

   It is technically possible to build Nixpkgs and NixOS with LLVM, however
   many packages are broken due to the differences between GCC and Clang.
   Tristan Ross, one of the maintainers of LLVM, started a project back in
   June of 2024 to improve the state of LLVM compiled packages. Currently,
   the project is located on GitHub at RossComputerGuy/nixpkgs-llvm-ws. Many
   packages have been fixed upstream but it is best to try the Flake as not
   all fixes are merged.

  Using LLVM in Nixpkgs without the Nixpkgs LLVM Workspace

   To use LLVM to build packages in Nix, it can be done by either using the
   pkgsLLVM attribute or by overriding a derivation and changing out the
   stdenv. Changing out the stdenv is as simple as this:

 pkgs.hello.override {
   stdenv = pkgs.llvmPackages.stdenv;
 }

   Retrieved from "https://wiki.nixos.org/w/index.php?title=LLVM&oldid=15543"
   Categories:
     * Applications
     * Languages
     * This page was last edited on 26 July 2024, at 18:40.
     * Privacy policy
     * About the NixOS Wiki
     * Â 
     * Desktop
     * Powered by MediaWiki
     * Toggle limited content width
