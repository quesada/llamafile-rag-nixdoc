   Jump to content
   [ ] Main menu
   Main menu
   Navigation
     * Home
   Ecosystem
     * Overview
     * NixOS
     * Package Manager
     * Nix Language
     * Nixpkgs
     * Hydra
     * Applications
   Topics
     * Software
     * Hardware
     * Desktop
     * Server
     * Community
   Learn NixOS
     * Overview
     * Guides
     * Tutorials
     * References
     * Cookbooks
   Wiki
     * Contribute
     * Manual of Style
     * Recent changes
     * Random page
   [IMG] NixOS Wiki
   Search
   _____________________
   Search
     * English
     * Create account
     * Log in
   [ ] Personal tools
     * Create account
     * Log in
     * Dark mode

Contents

     * Beginning
     * 1 Known Issues
          * 1.1 tup rebuilds too often
          * 1.2 mount does not unmount
          * 1.3 pkg-config can not find my packages
          * 1.4 Flakes
   [ ] Toggle the table of contents

                                      Tup

     * Page
     * Discussion
   [ ] English
     * Read
     * View source
     * View history
   [ ] Tools
   Tools
   Actions
     * Read
     * View source
     * View history
   General
     * What links here
     * Related changes
     * Special pages
     * Printable version
     * Permanent link
     * Page information
   From NixOS Wiki

   From the tup manual: "Tup is a file-based build system".

Known Issues

  tup rebuilds too often

   When using updater.full_dep, tup rebuilds the full project every time you
   reboot due to mtime changes in /run/current-system.

   The solution is to always use tup via nix-shell --pure so that
   /run/current-system is not in PATH

   Github issue: tup/#397

   Another method that minimizes changes to PATH is to create symlinks to
   tools with Tup:

 # Tuprules.tup - export a bang-rule that calls the Dhall interpreter
 DHALL_LINK = $(TUP_CWD)/dhall
 !dhall = | $(DHALL_LINK) |> $(DHALL_LINK)/bin/dhall |>

 # Tupfile - build a symlink to the nixpkgs#dhall package
 include_rules
 : |> nix build nixpkgs#dhall --out-link %o |> $(DHALL_LINK)

  mount does not unmount

   Tup can either not find fusermount OR the fusermount that tup finds is not
   setuid when using --pure.

   Github issue: nixpkgs/#107516

   There is no real solution to this other than 1. patching tup to use setuid
   fusermount 2. (maybe) setting tup as setuid.

  pkg-config can not find my packages

   When using nix-shell, pkg-config, and tup; pkg-config calls via tup do not
   find any packages.

   You must add export lines to your tupfile that correspond to the variables
   set by NixOS pkg-config:

   export PKG_CONFIG_PATH
   export PKG_CONFIG_PATH_FOR_TARGET
   export PKG_CONFIG_FOR_TARGET

   You also have to export NIX_PKG_CONFIG* variables, which can change based
   on platform:

  export NIX_PKG_CONFIG_WRAPPER_TARGET_TARGET_x86_64_unknown_linux_gnu

   You can verify this by adding : |> pkg-config --list-all > %o |>
   pkg-list.txt into your Tupfile and seeing which libraries are available
   via pkg-config.

  Flakes

   A Tup rule must not use a flake that resides in the same tup project as
   the rule because the nix command can aggressively access files in the
   vicinity of flake.nix. The flake should be external to the tup project or
   it can be stored within the same repository but only on a different
   branch, which would then then be registered in the local nix flake
   registry.

   Retrieved from "https://wiki.nixos.org/w/index.php?title=Tup&oldid=8557"
   Category:
     * Applications
   Hidden category:
     * Pages with syntax highlighting errors
     * This page was last edited on 19 January 2023, at 19:48.
     * Privacy policy
     * About the NixOS Wiki
     * Â 
     * Mobile view
     * Powered by MediaWiki
     * Toggle limited content width
