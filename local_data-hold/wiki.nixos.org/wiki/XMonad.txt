   Jump to content
   [ ] Main menu
   Main menu
   Navigation
     * Home
   Ecosystem
     * Overview
     * NixOS
     * Package Manager
     * Nix Language
     * Nixpkgs
     * Hydra
     * Applications
   Topics
     * Software
     * Hardware
     * Desktop
     * Server
     * Community
   Learn NixOS
     * Overview
     * Guides
     * Tutorials
     * References
     * Cookbooks
   Wiki
     * Contribute
     * Manual of Style
     * Recent changes
     * Random page
   [IMG] NixOS Wiki
   Search
   _____________________
   Search
     * English
     * Create account
     * Log in
   [ ] Personal tools
     * Create account
     * Log in
     * Dark mode

Contents

     * Beginning
     * 1 Installation
     * 2 Configuration
     * 3 Power management
          * 3.1 Suspend system after inactivity
               * 3.1.1 Troubleshooting
          * 3.2 Developer Environment for XMonad
               * 3.2.1 Create a project around xmonad.hs
   [ ] Toggle the table of contents

                                     XMonad

     * Page
     * Discussion
   [ ] English
     * Read
     * View source
     * View history
   [ ] Tools
   Tools
   Actions
     * Read
     * View source
     * View history
   General
     * What links here
     * Related changes
     * Special pages
     * Printable version
     * Permanent link
     * Page information
   From NixOS Wiki

   xmonad is a tiling window manager for X. Windows are arranged
   automatically to tile the screen without gaps or overlap, maximizing
   screen use. Window manager features are accessible from the keyboard: a
   mouse is optional.

   xmonad is written, configured and extensible in Haskell. Custom layout
   algorithms, key bindings and other extensions may be written by the user
   in configuration files.

   Layouts are applied dynamically, and different layouts may be used on each
   workspace. Xinerama is fully supported, allowing windows to be tiled on
   several physical screens.

Installation

   The simplest way to install Xmonad is to activate the corresponding NixOS
   module. You can do this by adding the following to your NixOS
   configuration. You probably also want to activate the
   enableContribAndExtras option.

  services.xserver.windowManager.xmonad = {
    enable = true;
    enableContribAndExtras = true;
  };

   The second options automatically adds the xmonad-contrib and xmonad-extras
   packages. They are required to use the Xmonad Contrib extensions.

   To add Haskell modules that are not included in the Xmonad-Contrib
   package, you have to tell ghc where to find them. For example, you can use
   the following to add the [1] module.

 { xmonad-contexts, ... }:
 {
 ...
   services.xserver.windowManager.xmonad = {
     ...
     ghcArgs = [
       "-hidir /tmp" # place interface files in /tmp, otherwise ghc tries to write them to the nix store
       "-odir /tmp" # place object files in /tmp, otherwise ghc tries to write them to the nix store
       "-i${xmonad-contexts}" # tell ghc to search in the respective nix store path for the module
     ];
   };
 }

   Don't forget to add the module to your inputs:

 inputs.xmonad-contexts = {
   url = "github:Procrat/xmonad-contexts";
   flake = false;
 };

Configuration

   To configure Xmonad you give Nix your config file like this:

 services.xserver.windowManager.xmonad.config = builtins.readFile ../path/to/xmonad.hs;

   More information on how to configure Xmonad can be found in the Arch Wiki,
   and a list of starter configs can be found in the Xmonad Config Archive.

Power management

   Xmonad is a Window Manager (WM) and not a Desktop Environment (DE).
   Therefore, among other things, Xmonad does not handle power management
   related things such as sleeping. However, there are several ways of still
   adding this functionality.

  Suspend system after inactivity

   The approach goes through the following steps:

     * Let the XServer detect idle-situation
     * Inform "logind" (i.e. "systemd") about the situation
     * Let "logind" make the system sleep

   We'll configure the XServers screensaver-settings to pick up inactivity:

 /etc/nixos/configuration.nix

   services.xserver.displayManager.sessionCommands = ''
     xset -dpms  # Disable Energy Star, as we are going to suspend anyway and it may hide "success" on that
     xset s blank # `noblank` may be useful for debugging
     xset s 300 # seconds
     ${pkgs.lightlocker}/bin/light-locker --idle-hint &
   '';

   You'll have to re-login for the settings above to be applied.

   The settings above will toggle the flag "IdleHint" within logind through
   light-locker (will work with "'lightdm'", there are alternatives). Next
   we'll have to pick-up the information within logindand select an action to
   take:

 /etc/nixos/configuration.nix

   systemd.targets.hybrid-sleep.enable = true;
   services.logind.extraConfig = ''
     IdleAction=hybrid-sleep
     IdleActionSec=20s
   '';

   The configuration above will let the system go to "hybrid-sleep" `20s`
   after the screen-saver triggered.

    Troubleshooting

   Check if the values of "IdleSinceHint" and "IdleSinceHintMonotonic" update
   using the command:

 $ watch "loginctl show-session | grep Idle"

   Try setting the flag manually (also need to disable manually):

 $ dbus-send --system --print-reply \
     --dest=org.freedesktop.login1 /org/freedesktop/login1/session/self \
     "org.freedesktop.login1.Session.SetIdleHint" boolean:true

   Check if the xset-settings have been applied properly and activate the
   screensaver manually:

 $ xset q
 $ sleep 1s && xset s activate

  Developer Environment for XMonad

   When developing modules for XMonad, it can help to install the following
   packages

 windowManager = {
   xmonad = {
     enable = true;
     enableContribAndExtras = true;
     extraPackages = haskellPackages: [
       haskellPackages.dbus
       haskellPackages.List
       haskellPackages.monad-logger
     ];
   };
 };

   More information can be found here and here.

    Create a project around xmonad.hs

 echo "xmonad" >> $HIE_BIOS_OUTPUT

 ~/.config/xmonad/hie.yaml

 cradle:
   bios:
     program: "./hie-bios.sh"
     with-ghc: "/nix/store/waa0dlvlszwbplrz5c7j674ab6v1n5wi-ghc-8.8.4-with-packages/bin/ghc"

   The "with-ghc" should be ghc that's in the "ghc-with-packages" dependency
   of the "xmonad-with-packages". It can be easily found with "nix-tree",
   which shows dependencies between packages on the machine.

   Retrieved from
   "https://wiki.nixos.org/w/index.php?title=XMonad&oldid=17514"
   Categories:
     * Window managers
     * Applications
     * This page was last edited on 15 September 2024, at 23:17.
     * Privacy policy
     * About the NixOS Wiki
     * Â 
     * Mobile view
     * Powered by MediaWiki
     * Toggle limited content width
